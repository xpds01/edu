2023-06-06 10:46:25,990 ERROR [http-nio-63050-exec-8][GlobalExceptionHandler.java:40] - 【系统异常】error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1E16A8F804D, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024625Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1E16A8F804D
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:46:25 GMT
}

java.lang.RuntimeException: error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1E16A8F804D, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024625Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1E16A8F804D
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:46:25 GMT
}

	at com.xuecheng.media.service.impl.MediaFileServiceImpl.checkChunk(MediaFileServiceImpl.java:232)
	at com.xuecheng.media.service.impl.MediaFileServiceImpl$$FastClassBySpringCGLIB$$c5338eb0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.xuecheng.media.service.impl.MediaFileServiceImpl$$EnhancerBySpringCGLIB$$f7e50cc2.checkChunk(<generated>)
	at com.xuecheng.media.api.BigFilesController.checkchunk(BigFilesController.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1E16A8F804D, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024625Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1E16A8F804D
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:46:25 GMT
}

	at io.minio.S3Base$1.onResponse(S3Base.java:690)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:519)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
2023-06-06 10:47:17,879 ERROR [http-nio-63050-exec-6][GlobalExceptionHandler.java:40] - 【系统异常】error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1ED7FDC31A6, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024717Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1ED7FDC31A6
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:47:17 GMT
}

java.lang.RuntimeException: error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1ED7FDC31A6, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024717Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1ED7FDC31A6
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:47:17 GMT
}

	at com.xuecheng.media.service.impl.MediaFileServiceImpl.checkChunk(MediaFileServiceImpl.java:232)
	at com.xuecheng.media.service.impl.MediaFileServiceImpl$$FastClassBySpringCGLIB$$c5338eb0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.xuecheng.media.service.impl.MediaFileServiceImpl$$EnhancerBySpringCGLIB$$f7e50cc2.checkChunk(<generated>)
	at com.xuecheng.media.api.BigFilesController.checkchunk(BigFilesController.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1ED7FDC31A6, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024717Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1ED7FDC31A6
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:47:17 GMT
}

	at io.minio.S3Base$1.onResponse(S3Base.java:690)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:519)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
2023-06-06 10:47:34,403 ERROR [http-nio-63050-exec-4][GlobalExceptionHandler.java:40] - 【系统异常】error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1F158CD7EDE, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024734Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1F158CD7EDE
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:47:34 GMT
}

java.lang.RuntimeException: error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1F158CD7EDE, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024734Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1F158CD7EDE
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:47:34 GMT
}

	at com.xuecheng.media.service.impl.MediaFileServiceImpl.checkChunk(MediaFileServiceImpl.java:232)
	at com.xuecheng.media.service.impl.MediaFileServiceImpl$$FastClassBySpringCGLIB$$c5338eb0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.xuecheng.media.service.impl.MediaFileServiceImpl$$EnhancerBySpringCGLIB$$f7e50cc2.checkChunk(<generated>)
	at com.xuecheng.media.api.BigFilesController.checkchunk(BigFilesController.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: error occurred
ErrorResponse(code = NoSuchKey, message = The specified key does not exist., bucketName = video, objectName = b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, resource = /video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, requestId = 1765F1F158CD7EDE, hostId = 591ca194-940a-4d8b-9fd1-1c2133a2b44a)
request={method=GET, url=http://192.168.101.65:9000/video/b/1/b17630cf2df5eb07749e92dce97c5530/chunk/0, headers=Host: 192.168.101.65:9000
Accept-Encoding: identity
User-Agent: MinIO (Windows 10; amd64) minio-java/8.4.3
Content-MD5: 1B2M2Y8AsgTpgAmY7PhCfg==
x-amz-content-sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date: 20230606T024734Z
Authorization: AWS4-HMAC-SHA256 Credential=*REDACTED*/20230606/us-east-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=*REDACTED*
}
response={code=404, headers=Accept-Ranges: bytes
Content-Length: 377
Content-Security-Policy: block-all-mixed-content
Content-Type: application/xml
No-Gzip-Compression: true
Server: MinIO
Strict-Transport-Security: max-age=31536000; includeSubDomains
Vary: Origin
Vary: Accept-Encoding
X-Amz-Request-Id: 1765F1F158CD7EDE
X-Content-Type-Options: nosniff
X-Xss-Protection: 1; mode=block
Date: Tue, 06 Jun 2023 02:47:34 GMT
}

	at io.minio.S3Base$1.onResponse(S3Base.java:690)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:519)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
